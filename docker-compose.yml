version: '3.4'

services:

  rabbitmq:
    container_name: rabbit-mq
    image: rabbitmq:3-management-alpine
    volumes:
      - type: volume
        source: rabbitmq
        target: /var/lib/rabbitmq/mnesia
    ports:
      - "15672:15672"
      - "5672:5672" 
    networks:
      - elk
    environment:
      RABBITMQ_DEFAULT_USER: logUser
      RABBITMQ_DEFAULT_PASS: logPwd
      RABBITMQ_DEFAULT_VHOST: logs

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://localhost:9200 || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 5
    networks:
      - elk

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://localhost:5601/ || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 5  
    networks:
      - elk
    depends_on:
      - elasticsearch

  metricbeat:
    container_name: metricbeat
    user: root # Need root because the `docker.sock` stats
    build: 
      context: metricbeat/
      args:
        ELK_VERSION: $ELK_VERSION        
    volumes:
      - type: bind
        source: ./metricbeat/config/metricbeat.yml
        target: /usr/share/metricbeat/metricbeat.yml
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    depends_on:
      - elasticsearch
      - kibana
      - rabbitmq
    restart: on-failure
    networks:
      - elk

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
  rabbitmq:
